# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class Darknet(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(Darknet, self).__init__()
        self.module_0 = py_nndct.nn.Module('nndct_const') #Darknet::25534(Darknet::nndct_const_0)
        self.module_1 = py_nndct.nn.Module('nndct_const') #Darknet::25538(Darknet::nndct_const_1)
        self.module_2 = py_nndct.nn.Module('nndct_const') #Darknet::25528(Darknet::nndct_const_2)
        self.module_3 = py_nndct.nn.Module('nndct_const') #Darknet::25532(Darknet::nndct_const_3)
        self.module_4 = py_nndct.nn.Module('nndct_const') #Darknet::25522(Darknet::nndct_const_4)
        self.module_5 = py_nndct.nn.Module('nndct_const') #Darknet::25526(Darknet::nndct_const_5)
        self.module_6 = py_nndct.nn.Module('nndct_const') #Darknet::25536(Darknet::nndct_const_6)
        self.module_7 = py_nndct.nn.Module('nndct_const') #Darknet::25530(Darknet::nndct_const_7)
        self.module_8 = py_nndct.nn.Module('nndct_const') #Darknet::25524(Darknet::nndct_const_8)
        self.module_9 = py_nndct.nn.Module('nndct_const') #Darknet::Darknet/24721(Darknet::nndct_const_9)
        self.module_10 = py_nndct.nn.Module('nndct_const') #Darknet::Darknet/24737(Darknet::nndct_const_10)
        self.module_11 = py_nndct.nn.Module('nndct_const') #Darknet::Darknet/24863(Darknet::nndct_const_11)
        self.module_12 = py_nndct.nn.Module('nndct_const') #Darknet::Darknet/24879(Darknet::nndct_const_12)
        self.module_13 = py_nndct.nn.Module('nndct_const') #Darknet::Darknet/25005(Darknet::nndct_const_13)
        self.module_14 = py_nndct.nn.Module('nndct_const') #Darknet::Darknet/25021(Darknet::nndct_const_14)
        self.module_15 = py_nndct.nn.Input() #Darknet::input_0(Darknet::nndct_input_15)
        self.module_16 = py_nndct.nn.quant_input() #Darknet::Darknet/QuantStub[quant]/20167(Darknet::nndct_quant_stub_16)
        self.module_17 = py_nndct.nn.Conv2d(in_channels=3, out_channels=9, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[0]/Conv2d[Conv2d]/ret.5(Darknet::nndct_conv2d_17)
        self.module_18 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[0]/LeakyReLU[activation]/ret.9(Darknet::nndct_leaky_relu_18)
        self.module_19 = py_nndct.nn.Conv2d(in_channels=9, out_channels=17, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[1]/Conv2d[Conv2d]/ret.11(Darknet::nndct_conv2d_19)
        self.module_20 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[1]/LeakyReLU[activation]/ret.15(Darknet::nndct_leaky_relu_20)
        self.module_21 = py_nndct.nn.Conv2d(in_channels=17, out_channels=9, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[2]/Conv2d[Conv2d]/ret.17(Darknet::nndct_conv2d_21)
        self.module_22 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[2]/LeakyReLU[activation]/ret.21(Darknet::nndct_leaky_relu_22)
        self.module_23 = py_nndct.nn.Conv2d(in_channels=9, out_channels=17, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[3]/Conv2d[Conv2d]/ret.23(Darknet::nndct_conv2d_23)
        self.module_24 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[3]/LeakyReLU[activation]/ret.27(Darknet::nndct_leaky_relu_24)
        self.module_25 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[4]/ret.31(Darknet::nndct_elemwise_add_25)
        self.module_26 = py_nndct.nn.Conv2d(in_channels=17, out_channels=35, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[5]/Conv2d[Conv2d]/ret.33(Darknet::nndct_conv2d_26)
        self.module_27 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[5]/LeakyReLU[activation]/ret.37(Darknet::nndct_leaky_relu_27)
        self.module_28 = py_nndct.nn.Conv2d(in_channels=35, out_channels=17, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[6]/Conv2d[Conv2d]/ret.39(Darknet::nndct_conv2d_28)
        self.module_29 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[6]/LeakyReLU[activation]/ret.43(Darknet::nndct_leaky_relu_29)
        self.module_30 = py_nndct.nn.Conv2d(in_channels=35, out_channels=17, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[8]/Conv2d[Conv2d]/ret.45(Darknet::nndct_conv2d_30)
        self.module_31 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[8]/LeakyReLU[activation]/ret.49(Darknet::nndct_leaky_relu_31)
        self.module_32 = py_nndct.nn.Conv2d(in_channels=17, out_channels=17, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[9]/Conv2d[Conv2d]/ret.51(Darknet::nndct_conv2d_32)
        self.module_33 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[9]/LeakyReLU[activation]/ret.55(Darknet::nndct_leaky_relu_33)
        self.module_34 = py_nndct.nn.Conv2d(in_channels=17, out_channels=17, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[10]/Conv2d[Conv2d]/ret.57(Darknet::nndct_conv2d_34)
        self.module_35 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[10]/LeakyReLU[activation]/ret.61(Darknet::nndct_leaky_relu_35)
        self.module_36 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[11]/ret.65(Darknet::nndct_elemwise_add_36)
        self.module_37 = py_nndct.nn.Conv2d(in_channels=17, out_channels=17, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[12]/Conv2d[Conv2d]/ret.67(Darknet::nndct_conv2d_37)
        self.module_38 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[12]/LeakyReLU[activation]/ret.71(Darknet::nndct_leaky_relu_38)
        self.module_39 = py_nndct.nn.Conv2d(in_channels=17, out_channels=17, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[13]/Conv2d[Conv2d]/ret.73(Darknet::nndct_conv2d_39)
        self.module_40 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[13]/LeakyReLU[activation]/ret.77(Darknet::nndct_leaky_relu_40)
        self.module_41 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[14]/ret.81(Darknet::nndct_elemwise_add_41)
        self.module_42 = py_nndct.nn.Conv2d(in_channels=17, out_channels=18, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[15]/Conv2d[Conv2d]/ret.83(Darknet::nndct_conv2d_42)
        self.module_43 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[15]/LeakyReLU[activation]/ret.87(Darknet::nndct_leaky_relu_43)
        self.module_44 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[16]/ret.89(Darknet::nndct_concat_44)
        self.module_45 = py_nndct.nn.Conv2d(in_channels=35, out_channels=34, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[17]/Conv2d[Conv2d]/ret.91(Darknet::nndct_conv2d_45)
        self.module_46 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[17]/LeakyReLU[activation]/ret.95(Darknet::nndct_leaky_relu_46)
        self.module_47 = py_nndct.nn.Conv2d(in_channels=34, out_channels=67, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[18]/Conv2d[Conv2d]/ret.97(Darknet::nndct_conv2d_47)
        self.module_48 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[18]/LeakyReLU[activation]/ret.101(Darknet::nndct_leaky_relu_48)
        self.module_49 = py_nndct.nn.Conv2d(in_channels=67, out_channels=34, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[19]/Conv2d[Conv2d]/ret.103(Darknet::nndct_conv2d_49)
        self.module_50 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[19]/LeakyReLU[activation]/ret.107(Darknet::nndct_leaky_relu_50)
        self.module_51 = py_nndct.nn.Conv2d(in_channels=67, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[21]/Conv2d[Conv2d]/ret.109(Darknet::nndct_conv2d_51)
        self.module_52 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[21]/LeakyReLU[activation]/ret.113(Darknet::nndct_leaky_relu_52)
        self.module_53 = py_nndct.nn.Conv2d(in_channels=33, out_channels=35, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[22]/Conv2d[Conv2d]/ret.115(Darknet::nndct_conv2d_53)
        self.module_54 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[22]/LeakyReLU[activation]/ret.119(Darknet::nndct_leaky_relu_54)
        self.module_55 = py_nndct.nn.Conv2d(in_channels=35, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[23]/Conv2d[Conv2d]/ret.121(Darknet::nndct_conv2d_55)
        self.module_56 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[23]/LeakyReLU[activation]/ret.125(Darknet::nndct_leaky_relu_56)
        self.module_57 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[24]/ret.129(Darknet::nndct_elemwise_add_57)
        self.module_58 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[25]/Conv2d[Conv2d]/ret.131(Darknet::nndct_conv2d_58)
        self.module_59 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[25]/LeakyReLU[activation]/ret.135(Darknet::nndct_leaky_relu_59)
        self.module_60 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[26]/Conv2d[Conv2d]/ret.137(Darknet::nndct_conv2d_60)
        self.module_61 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[26]/LeakyReLU[activation]/ret.141(Darknet::nndct_leaky_relu_61)
        self.module_62 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[27]/ret.145(Darknet::nndct_elemwise_add_62)
        self.module_63 = py_nndct.nn.Conv2d(in_channels=33, out_channels=35, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[28]/Conv2d[Conv2d]/ret.147(Darknet::nndct_conv2d_63)
        self.module_64 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[28]/LeakyReLU[activation]/ret.151(Darknet::nndct_leaky_relu_64)
        self.module_65 = py_nndct.nn.Conv2d(in_channels=35, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[29]/Conv2d[Conv2d]/ret.153(Darknet::nndct_conv2d_65)
        self.module_66 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[29]/LeakyReLU[activation]/ret.157(Darknet::nndct_leaky_relu_66)
        self.module_67 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[30]/ret.161(Darknet::nndct_elemwise_add_67)
        self.module_68 = py_nndct.nn.Conv2d(in_channels=33, out_channels=34, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[31]/Conv2d[Conv2d]/ret.163(Darknet::nndct_conv2d_68)
        self.module_69 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[31]/LeakyReLU[activation]/ret.167(Darknet::nndct_leaky_relu_69)
        self.module_70 = py_nndct.nn.Conv2d(in_channels=34, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[32]/Conv2d[Conv2d]/ret.169(Darknet::nndct_conv2d_70)
        self.module_71 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[32]/LeakyReLU[activation]/ret.173(Darknet::nndct_leaky_relu_71)
        self.module_72 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[33]/ret.177(Darknet::nndct_elemwise_add_72)
        self.module_73 = py_nndct.nn.Conv2d(in_channels=33, out_channels=35, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[34]/Conv2d[Conv2d]/ret.179(Darknet::nndct_conv2d_73)
        self.module_74 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[34]/LeakyReLU[activation]/ret.183(Darknet::nndct_leaky_relu_74)
        self.module_75 = py_nndct.nn.Conv2d(in_channels=35, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[35]/Conv2d[Conv2d]/ret.185(Darknet::nndct_conv2d_75)
        self.module_76 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[35]/LeakyReLU[activation]/ret.189(Darknet::nndct_leaky_relu_76)
        self.module_77 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[36]/ret.193(Darknet::nndct_elemwise_add_77)
        self.module_78 = py_nndct.nn.Conv2d(in_channels=33, out_channels=34, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[37]/Conv2d[Conv2d]/ret.195(Darknet::nndct_conv2d_78)
        self.module_79 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[37]/LeakyReLU[activation]/ret.199(Darknet::nndct_leaky_relu_79)
        self.module_80 = py_nndct.nn.Conv2d(in_channels=34, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[38]/Conv2d[Conv2d]/ret.201(Darknet::nndct_conv2d_80)
        self.module_81 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[38]/LeakyReLU[activation]/ret.205(Darknet::nndct_leaky_relu_81)
        self.module_82 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[39]/ret.209(Darknet::nndct_elemwise_add_82)
        self.module_83 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[40]/Conv2d[Conv2d]/ret.211(Darknet::nndct_conv2d_83)
        self.module_84 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[40]/LeakyReLU[activation]/ret.215(Darknet::nndct_leaky_relu_84)
        self.module_85 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[41]/Conv2d[Conv2d]/ret.217(Darknet::nndct_conv2d_85)
        self.module_86 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[41]/LeakyReLU[activation]/ret.221(Darknet::nndct_leaky_relu_86)
        self.module_87 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[42]/ret.225(Darknet::nndct_elemwise_add_87)
        self.module_88 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[43]/Conv2d[Conv2d]/ret.227(Darknet::nndct_conv2d_88)
        self.module_89 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[43]/LeakyReLU[activation]/ret.231(Darknet::nndct_leaky_relu_89)
        self.module_90 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[44]/Conv2d[Conv2d]/ret.233(Darknet::nndct_conv2d_90)
        self.module_91 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[44]/LeakyReLU[activation]/ret.237(Darknet::nndct_leaky_relu_91)
        self.module_92 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[45]/ret.241(Darknet::nndct_elemwise_add_92)
        self.module_93 = py_nndct.nn.Conv2d(in_channels=33, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[46]/Conv2d[Conv2d]/ret.243(Darknet::nndct_conv2d_93)
        self.module_94 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[46]/LeakyReLU[activation]/ret.247(Darknet::nndct_leaky_relu_94)
        self.module_95 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[47]/ret.249(Darknet::nndct_concat_95)
        self.module_96 = py_nndct.nn.Conv2d(in_channels=67, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[48]/Conv2d[Conv2d]/ret.251(Darknet::nndct_conv2d_96)
        self.module_97 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[48]/LeakyReLU[activation]/ret.255(Darknet::nndct_leaky_relu_97)
        self.module_98 = py_nndct.nn.Conv2d(in_channels=67, out_channels=136, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[49]/Conv2d[Conv2d]/ret.257(Darknet::nndct_conv2d_98)
        self.module_99 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[49]/LeakyReLU[activation]/ret.261(Darknet::nndct_leaky_relu_99)
        self.module_100 = py_nndct.nn.Conv2d(in_channels=136, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[50]/Conv2d[Conv2d]/ret.263(Darknet::nndct_conv2d_100)
        self.module_101 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[50]/LeakyReLU[activation]/ret.267(Darknet::nndct_leaky_relu_101)
        self.module_102 = py_nndct.nn.Conv2d(in_channels=136, out_channels=69, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[52]/Conv2d[Conv2d]/ret.269(Darknet::nndct_conv2d_102)
        self.module_103 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[52]/LeakyReLU[activation]/ret.273(Darknet::nndct_leaky_relu_103)
        self.module_104 = py_nndct.nn.Conv2d(in_channels=69, out_channels=66, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[53]/Conv2d[Conv2d]/ret.275(Darknet::nndct_conv2d_104)
        self.module_105 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[53]/LeakyReLU[activation]/ret.279(Darknet::nndct_leaky_relu_105)
        self.module_106 = py_nndct.nn.Conv2d(in_channels=66, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[54]/Conv2d[Conv2d]/ret.281(Darknet::nndct_conv2d_106)
        self.module_107 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[54]/LeakyReLU[activation]/ret.285(Darknet::nndct_leaky_relu_107)
        self.module_108 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[55]/ret.289(Darknet::nndct_elemwise_add_108)
        self.module_109 = py_nndct.nn.Conv2d(in_channels=69, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[56]/Conv2d[Conv2d]/ret.291(Darknet::nndct_conv2d_109)
        self.module_110 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[56]/LeakyReLU[activation]/ret.295(Darknet::nndct_leaky_relu_110)
        self.module_111 = py_nndct.nn.Conv2d(in_channels=67, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[57]/Conv2d[Conv2d]/ret.297(Darknet::nndct_conv2d_111)
        self.module_112 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[57]/LeakyReLU[activation]/ret.301(Darknet::nndct_leaky_relu_112)
        self.module_113 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[58]/ret.305(Darknet::nndct_elemwise_add_113)
        self.module_114 = py_nndct.nn.Conv2d(in_channels=69, out_channels=68, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[59]/Conv2d[Conv2d]/ret.307(Darknet::nndct_conv2d_114)
        self.module_115 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[59]/LeakyReLU[activation]/ret.311(Darknet::nndct_leaky_relu_115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=68, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[60]/Conv2d[Conv2d]/ret.313(Darknet::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[60]/LeakyReLU[activation]/ret.317(Darknet::nndct_leaky_relu_117)
        self.module_118 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[61]/ret.321(Darknet::nndct_elemwise_add_118)
        self.module_119 = py_nndct.nn.Conv2d(in_channels=69, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[62]/Conv2d[Conv2d]/ret.323(Darknet::nndct_conv2d_119)
        self.module_120 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[62]/LeakyReLU[activation]/ret.327(Darknet::nndct_leaky_relu_120)
        self.module_121 = py_nndct.nn.Conv2d(in_channels=67, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[63]/Conv2d[Conv2d]/ret.329(Darknet::nndct_conv2d_121)
        self.module_122 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[63]/LeakyReLU[activation]/ret.333(Darknet::nndct_leaky_relu_122)
        self.module_123 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[64]/ret.337(Darknet::nndct_elemwise_add_123)
        self.module_124 = py_nndct.nn.Conv2d(in_channels=69, out_channels=66, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[65]/Conv2d[Conv2d]/ret.339(Darknet::nndct_conv2d_124)
        self.module_125 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[65]/LeakyReLU[activation]/ret.343(Darknet::nndct_leaky_relu_125)
        self.module_126 = py_nndct.nn.Conv2d(in_channels=66, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[66]/Conv2d[Conv2d]/ret.345(Darknet::nndct_conv2d_126)
        self.module_127 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[66]/LeakyReLU[activation]/ret.349(Darknet::nndct_leaky_relu_127)
        self.module_128 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[67]/ret.353(Darknet::nndct_elemwise_add_128)
        self.module_129 = py_nndct.nn.Conv2d(in_channels=69, out_channels=68, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[68]/Conv2d[Conv2d]/ret.355(Darknet::nndct_conv2d_129)
        self.module_130 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[68]/LeakyReLU[activation]/ret.359(Darknet::nndct_leaky_relu_130)
        self.module_131 = py_nndct.nn.Conv2d(in_channels=68, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[69]/Conv2d[Conv2d]/ret.361(Darknet::nndct_conv2d_131)
        self.module_132 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[69]/LeakyReLU[activation]/ret.365(Darknet::nndct_leaky_relu_132)
        self.module_133 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[70]/ret.369(Darknet::nndct_elemwise_add_133)
        self.module_134 = py_nndct.nn.Conv2d(in_channels=69, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[71]/Conv2d[Conv2d]/ret.371(Darknet::nndct_conv2d_134)
        self.module_135 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[71]/LeakyReLU[activation]/ret.375(Darknet::nndct_leaky_relu_135)
        self.module_136 = py_nndct.nn.Conv2d(in_channels=67, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[72]/Conv2d[Conv2d]/ret.377(Darknet::nndct_conv2d_136)
        self.module_137 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[72]/LeakyReLU[activation]/ret.381(Darknet::nndct_leaky_relu_137)
        self.module_138 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[73]/ret.385(Darknet::nndct_elemwise_add_138)
        self.module_139 = py_nndct.nn.Conv2d(in_channels=69, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[74]/Conv2d[Conv2d]/ret.387(Darknet::nndct_conv2d_139)
        self.module_140 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[74]/LeakyReLU[activation]/ret.391(Darknet::nndct_leaky_relu_140)
        self.module_141 = py_nndct.nn.Conv2d(in_channels=67, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[75]/Conv2d[Conv2d]/ret.393(Darknet::nndct_conv2d_141)
        self.module_142 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[75]/LeakyReLU[activation]/ret.397(Darknet::nndct_leaky_relu_142)
        self.module_143 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[76]/ret.401(Darknet::nndct_elemwise_add_143)
        self.module_144 = py_nndct.nn.Conv2d(in_channels=69, out_channels=69, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[77]/Conv2d[Conv2d]/ret.403(Darknet::nndct_conv2d_144)
        self.module_145 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[77]/LeakyReLU[activation]/ret.407(Darknet::nndct_leaky_relu_145)
        self.module_146 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[78]/ret.409(Darknet::nndct_concat_146)
        self.module_147 = py_nndct.nn.Conv2d(in_channels=136, out_channels=135, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[79]/Conv2d[Conv2d]/ret.411(Darknet::nndct_conv2d_147)
        self.module_148 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[79]/LeakyReLU[activation]/ret.415(Darknet::nndct_leaky_relu_148)
        self.module_149 = py_nndct.nn.Conv2d(in_channels=135, out_channels=264, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[80]/Conv2d[Conv2d]/ret.417(Darknet::nndct_conv2d_149)
        self.module_150 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[80]/LeakyReLU[activation]/ret.421(Darknet::nndct_leaky_relu_150)
        self.module_151 = py_nndct.nn.Conv2d(in_channels=264, out_channels=136, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[81]/Conv2d[Conv2d]/ret.423(Darknet::nndct_conv2d_151)
        self.module_152 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[81]/LeakyReLU[activation]/ret.427(Darknet::nndct_leaky_relu_152)
        self.module_153 = py_nndct.nn.Conv2d(in_channels=264, out_channels=130, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[83]/Conv2d[Conv2d]/ret.429(Darknet::nndct_conv2d_153)
        self.module_154 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[83]/LeakyReLU[activation]/ret.433(Darknet::nndct_leaky_relu_154)
        self.module_155 = py_nndct.nn.Conv2d(in_channels=130, out_channels=134, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[84]/Conv2d[Conv2d]/ret.435(Darknet::nndct_conv2d_155)
        self.module_156 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[84]/LeakyReLU[activation]/ret.439(Darknet::nndct_leaky_relu_156)
        self.module_157 = py_nndct.nn.Conv2d(in_channels=134, out_channels=130, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[85]/Conv2d[Conv2d]/ret.441(Darknet::nndct_conv2d_157)
        self.module_158 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[85]/LeakyReLU[activation]/ret.445(Darknet::nndct_leaky_relu_158)
        self.module_159 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[86]/ret.449(Darknet::nndct_elemwise_add_159)
        self.module_160 = py_nndct.nn.Conv2d(in_channels=130, out_channels=130, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[87]/Conv2d[Conv2d]/ret.451(Darknet::nndct_conv2d_160)
        self.module_161 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[87]/LeakyReLU[activation]/ret.455(Darknet::nndct_leaky_relu_161)
        self.module_162 = py_nndct.nn.Conv2d(in_channels=130, out_channels=130, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[88]/Conv2d[Conv2d]/ret.457(Darknet::nndct_conv2d_162)
        self.module_163 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[88]/LeakyReLU[activation]/ret.461(Darknet::nndct_leaky_relu_163)
        self.module_164 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[89]/ret.465(Darknet::nndct_elemwise_add_164)
        self.module_165 = py_nndct.nn.Conv2d(in_channels=130, out_channels=133, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[90]/Conv2d[Conv2d]/ret.467(Darknet::nndct_conv2d_165)
        self.module_166 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[90]/LeakyReLU[activation]/ret.471(Darknet::nndct_leaky_relu_166)
        self.module_167 = py_nndct.nn.Conv2d(in_channels=133, out_channels=130, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[91]/Conv2d[Conv2d]/ret.473(Darknet::nndct_conv2d_167)
        self.module_168 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[91]/LeakyReLU[activation]/ret.477(Darknet::nndct_leaky_relu_168)
        self.module_169 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[92]/ret.481(Darknet::nndct_elemwise_add_169)
        self.module_170 = py_nndct.nn.Conv2d(in_channels=130, out_channels=130, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[93]/Conv2d[Conv2d]/ret.483(Darknet::nndct_conv2d_170)
        self.module_171 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[93]/LeakyReLU[activation]/ret.487(Darknet::nndct_leaky_relu_171)
        self.module_172 = py_nndct.nn.Conv2d(in_channels=130, out_channels=130, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[94]/Conv2d[Conv2d]/ret.489(Darknet::nndct_conv2d_172)
        self.module_173 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[94]/LeakyReLU[activation]/ret.493(Darknet::nndct_leaky_relu_173)
        self.module_174 = py_nndct.nn.Add() #Darknet::Darknet/WeightedFeatureFusion[module_list]/ModuleList[95]/ret.497(Darknet::nndct_elemwise_add_174)
        self.module_175 = py_nndct.nn.Conv2d(in_channels=130, out_channels=133, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[96]/Conv2d[Conv2d]/ret.499(Darknet::nndct_conv2d_175)
        self.module_176 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[96]/LeakyReLU[activation]/ret.503(Darknet::nndct_leaky_relu_176)
        self.module_177 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[97]/ret.505(Darknet::nndct_concat_177)
        self.module_178 = py_nndct.nn.Conv2d(in_channels=269, out_channels=272, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[98]/Conv2d[Conv2d]/ret.507(Darknet::nndct_conv2d_178)
        self.module_179 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[98]/LeakyReLU[activation]/ret.511(Darknet::nndct_leaky_relu_179)
        self.module_180 = py_nndct.nn.Conv2d(in_channels=272, out_channels=136, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[99]/Conv2d[Conv2d]/ret.513(Darknet::nndct_conv2d_180)
        self.module_181 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[99]/LeakyReLU[activation]/ret.517(Darknet::nndct_leaky_relu_181)
        self.module_182 = py_nndct.nn.Conv2d(in_channels=272, out_channels=135, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[101]/Conv2d[Conv2d]/ret.519(Darknet::nndct_conv2d_182)
        self.module_183 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[101]/LeakyReLU[activation]/ret.523(Darknet::nndct_leaky_relu_183)
        self.module_184 = py_nndct.nn.Conv2d(in_channels=135, out_channels=130, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[102]/Conv2d[Conv2d]/ret.525(Darknet::nndct_conv2d_184)
        self.module_185 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[102]/LeakyReLU[activation]/ret.529(Darknet::nndct_leaky_relu_185)
        self.module_186 = py_nndct.nn.Conv2d(in_channels=130, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[103]/Conv2d[Conv2d]/ret.531(Darknet::nndct_conv2d_186)
        self.module_187 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[103]/LeakyReLU[activation]/ret.535(Darknet::nndct_leaky_relu_187)
        self.module_188 = py_nndct.nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=[2, 2], dilation=[1, 1], ceil_mode=False) #Darknet::Darknet/MaxPool2d[module_list]/ModuleList[104]/23233(Darknet::nndct_maxpool_188)
        self.module_189 = py_nndct.nn.MaxPool2d(kernel_size=[9, 9], stride=[1, 1], padding=[4, 4], dilation=[1, 1], ceil_mode=False) #Darknet::Darknet/MaxPool2d[module_list]/ModuleList[106]/23250(Darknet::nndct_maxpool_189)
        self.module_190 = py_nndct.nn.MaxPool2d(kernel_size=[13, 13], stride=[1, 1], padding=[6, 6], dilation=[1, 1], ceil_mode=False) #Darknet::Darknet/MaxPool2d[module_list]/ModuleList[108]/23267(Darknet::nndct_maxpool_190)
        self.module_191 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[109]/ret.537(Darknet::nndct_concat_191)
        self.module_192 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=132, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[110]/Conv2d[Conv2d]/ret.539(Darknet::nndct_conv2d_192)
        self.module_193 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[110]/LeakyReLU[activation]/ret.543(Darknet::nndct_leaky_relu_193)
        self.module_194 = py_nndct.nn.Conv2d(in_channels=132, out_channels=135, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[111]/Conv2d[Conv2d]/ret.545(Darknet::nndct_conv2d_194)
        self.module_195 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[111]/LeakyReLU[activation]/ret.549(Darknet::nndct_leaky_relu_195)
        self.module_196 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[112]/ret.551(Darknet::nndct_concat_196)
        self.module_197 = py_nndct.nn.Conv2d(in_channels=271, out_channels=135, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[113]/Conv2d[Conv2d]/ret.553(Darknet::nndct_conv2d_197)
        self.module_198 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[113]/LeakyReLU[activation]/ret.557(Darknet::nndct_leaky_relu_198)
        self.module_199 = py_nndct.nn.Conv2d(in_channels=135, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[114]/Conv2d[Conv2d]/ret.559(Darknet::nndct_conv2d_199)
        self.module_200 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[114]/LeakyReLU[activation]/ret.563(Darknet::nndct_leaky_relu_200)
        self.module_201 = py_nndct.nn.Interpolate() #Darknet::Darknet/Upsample[module_list]/ModuleList[115]/ret.565(Darknet::nndct_resize_201)
        self.module_202 = py_nndct.nn.Conv2d(in_channels=135, out_channels=69, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[117]/Conv2d[Conv2d]/ret.567(Darknet::nndct_conv2d_202)
        self.module_203 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[117]/LeakyReLU[activation]/ret.571(Darknet::nndct_leaky_relu_203)
        self.module_204 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[118]/ret.573(Darknet::nndct_concat_204)
        self.module_205 = py_nndct.nn.Conv2d(in_channels=325, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[119]/Conv2d[Conv2d]/ret.575(Darknet::nndct_conv2d_205)
        self.module_206 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[119]/LeakyReLU[activation]/ret.579(Darknet::nndct_leaky_relu_206)
        self.module_207 = py_nndct.nn.Conv2d(in_channels=67, out_channels=68, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[120]/Conv2d[Conv2d]/ret.581(Darknet::nndct_conv2d_207)
        self.module_208 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[120]/LeakyReLU[activation]/ret.585(Darknet::nndct_leaky_relu_208)
        self.module_209 = py_nndct.nn.Conv2d(in_channels=67, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[122]/Conv2d[Conv2d]/ret.587(Darknet::nndct_conv2d_209)
        self.module_210 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[122]/LeakyReLU[activation]/ret.591(Darknet::nndct_leaky_relu_210)
        self.module_211 = py_nndct.nn.Conv2d(in_channels=67, out_channels=69, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[123]/Conv2d[Conv2d]/ret.593(Darknet::nndct_conv2d_211)
        self.module_212 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[123]/LeakyReLU[activation]/ret.597(Darknet::nndct_leaky_relu_212)
        self.module_213 = py_nndct.nn.Conv2d(in_channels=69, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[124]/Conv2d[Conv2d]/ret.599(Darknet::nndct_conv2d_213)
        self.module_214 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[124]/LeakyReLU[activation]/ret.603(Darknet::nndct_leaky_relu_214)
        self.module_215 = py_nndct.nn.Conv2d(in_channels=67, out_channels=66, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[125]/Conv2d[Conv2d]/ret.605(Darknet::nndct_conv2d_215)
        self.module_216 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[125]/LeakyReLU[activation]/ret.609(Darknet::nndct_leaky_relu_216)
        self.module_217 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[126]/ret.611(Darknet::nndct_concat_217)
        self.module_218 = py_nndct.nn.Conv2d(in_channels=134, out_channels=69, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[127]/Conv2d[Conv2d]/ret.613(Darknet::nndct_conv2d_218)
        self.module_219 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[127]/LeakyReLU[activation]/ret.617(Darknet::nndct_leaky_relu_219)
        self.module_220 = py_nndct.nn.Conv2d(in_channels=69, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[128]/Conv2d[Conv2d]/ret.619(Darknet::nndct_conv2d_220)
        self.module_221 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[128]/LeakyReLU[activation]/ret.623(Darknet::nndct_leaky_relu_221)
        self.module_222 = py_nndct.nn.Interpolate() #Darknet::Darknet/Upsample[module_list]/ModuleList[129]/ret.625(Darknet::nndct_resize_222)
        self.module_223 = py_nndct.nn.Conv2d(in_channels=67, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[131]/Conv2d[Conv2d]/ret.627(Darknet::nndct_conv2d_223)
        self.module_224 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[131]/LeakyReLU[activation]/ret.631(Darknet::nndct_leaky_relu_224)
        self.module_225 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[132]/ret.633(Darknet::nndct_concat_225)
        self.module_226 = py_nndct.nn.Conv2d(in_channels=161, out_channels=34, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[133]/Conv2d[Conv2d]/ret.635(Darknet::nndct_conv2d_226)
        self.module_227 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[133]/LeakyReLU[activation]/ret.639(Darknet::nndct_leaky_relu_227)
        self.module_228 = py_nndct.nn.Conv2d(in_channels=34, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[134]/Conv2d[Conv2d]/ret.641(Darknet::nndct_conv2d_228)
        self.module_229 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[134]/LeakyReLU[activation]/ret.645(Darknet::nndct_leaky_relu_229)
        self.module_230 = py_nndct.nn.Conv2d(in_channels=34, out_channels=35, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[136]/Conv2d[Conv2d]/ret.647(Darknet::nndct_conv2d_230)
        self.module_231 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[136]/LeakyReLU[activation]/ret.651(Darknet::nndct_leaky_relu_231)
        self.module_232 = py_nndct.nn.Conv2d(in_channels=35, out_channels=34, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[137]/Conv2d[Conv2d]/ret.653(Darknet::nndct_conv2d_232)
        self.module_233 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[137]/LeakyReLU[activation]/ret.657(Darknet::nndct_leaky_relu_233)
        self.module_234 = py_nndct.nn.Conv2d(in_channels=34, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[138]/Conv2d[Conv2d]/ret.659(Darknet::nndct_conv2d_234)
        self.module_235 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[138]/LeakyReLU[activation]/ret.663(Darknet::nndct_leaky_relu_235)
        self.module_236 = py_nndct.nn.Conv2d(in_channels=33, out_channels=34, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[139]/Conv2d[Conv2d]/ret.665(Darknet::nndct_conv2d_236)
        self.module_237 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[139]/LeakyReLU[activation]/ret.669(Darknet::nndct_leaky_relu_237)
        self.module_238 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[140]/ret.671(Darknet::nndct_concat_238)
        self.module_239 = py_nndct.nn.Conv2d(in_channels=67, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[141]/Conv2d[Conv2d]/ret.673(Darknet::nndct_conv2d_239)
        self.module_240 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[141]/LeakyReLU[activation]/ret.677(Darknet::nndct_leaky_relu_240)
        self.module_241 = py_nndct.nn.Conv2d(in_channels=33, out_channels=69, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[142]/Conv2d[Conv2d]/ret.679(Darknet::nndct_conv2d_241)
        self.module_242 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[142]/LeakyReLU[activation]/ret.683(Darknet::nndct_leaky_relu_242)
        self.module_243 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[143]/ret.685(Darknet::nndct_concat_243)
        self.module_244 = py_nndct.nn.Conv2d(in_channels=138, out_channels=66, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[144]/Conv2d[Conv2d]/ret.687(Darknet::nndct_conv2d_244)
        self.module_245 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[144]/LeakyReLU[activation]/ret.691(Darknet::nndct_leaky_relu_245)
        self.module_246 = py_nndct.nn.Conv2d(in_channels=66, out_channels=67, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[145]/Conv2d[Conv2d]/ret.693(Darknet::nndct_conv2d_246)
        self.module_247 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[145]/LeakyReLU[activation]/ret.697(Darknet::nndct_leaky_relu_247)
        self.module_248 = py_nndct.nn.Conv2d(in_channels=66, out_channels=66, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[147]/Conv2d[Conv2d]/ret.699(Darknet::nndct_conv2d_248)
        self.module_249 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[147]/LeakyReLU[activation]/ret.703(Darknet::nndct_leaky_relu_249)
        self.module_250 = py_nndct.nn.Conv2d(in_channels=66, out_channels=65, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[148]/Conv2d[Conv2d]/ret.705(Darknet::nndct_conv2d_250)
        self.module_251 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[148]/LeakyReLU[activation]/ret.709(Darknet::nndct_leaky_relu_251)
        self.module_252 = py_nndct.nn.Conv2d(in_channels=65, out_channels=68, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[149]/Conv2d[Conv2d]/ret.711(Darknet::nndct_conv2d_252)
        self.module_253 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[149]/LeakyReLU[activation]/ret.715(Darknet::nndct_leaky_relu_253)
        self.module_254 = py_nndct.nn.Conv2d(in_channels=68, out_channels=68, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[150]/Conv2d[Conv2d]/ret.717(Darknet::nndct_conv2d_254)
        self.module_255 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[150]/LeakyReLU[activation]/ret.721(Darknet::nndct_leaky_relu_255)
        self.module_256 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[151]/ret.723(Darknet::nndct_concat_256)
        self.module_257 = py_nndct.nn.Conv2d(in_channels=135, out_channels=70, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[152]/Conv2d[Conv2d]/ret.725(Darknet::nndct_conv2d_257)
        self.module_258 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[152]/LeakyReLU[activation]/ret.729(Darknet::nndct_leaky_relu_258)
        self.module_259 = py_nndct.nn.Conv2d(in_channels=70, out_channels=129, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[153]/Conv2d[Conv2d]/ret.731(Darknet::nndct_conv2d_259)
        self.module_260 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[153]/LeakyReLU[activation]/ret.735(Darknet::nndct_leaky_relu_260)
        self.module_261 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[154]/ret.737(Darknet::nndct_concat_261)
        self.module_262 = py_nndct.nn.Conv2d(in_channels=264, out_channels=132, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[155]/Conv2d[Conv2d]/ret.739(Darknet::nndct_conv2d_262)
        self.module_263 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[155]/LeakyReLU[activation]/ret.743(Darknet::nndct_leaky_relu_263)
        self.module_264 = py_nndct.nn.Conv2d(in_channels=132, out_channels=138, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[156]/Conv2d[Conv2d]/ret.745(Darknet::nndct_conv2d_264)
        self.module_265 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[156]/LeakyReLU[activation]/ret.749(Darknet::nndct_leaky_relu_265)
        self.module_266 = py_nndct.nn.Conv2d(in_channels=132, out_channels=132, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[158]/Conv2d[Conv2d]/ret.751(Darknet::nndct_conv2d_266)
        self.module_267 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[158]/LeakyReLU[activation]/ret.755(Darknet::nndct_leaky_relu_267)
        self.module_268 = py_nndct.nn.Conv2d(in_channels=132, out_channels=138, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[159]/Conv2d[Conv2d]/ret.757(Darknet::nndct_conv2d_268)
        self.module_269 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[159]/LeakyReLU[activation]/ret.761(Darknet::nndct_leaky_relu_269)
        self.module_270 = py_nndct.nn.Conv2d(in_channels=138, out_channels=132, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[160]/Conv2d[Conv2d]/ret.763(Darknet::nndct_conv2d_270)
        self.module_271 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[160]/LeakyReLU[activation]/ret.767(Darknet::nndct_leaky_relu_271)
        self.module_272 = py_nndct.nn.Conv2d(in_channels=132, out_channels=139, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[161]/Conv2d[Conv2d]/ret.769(Darknet::nndct_conv2d_272)
        self.module_273 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[161]/LeakyReLU[activation]/ret.773(Darknet::nndct_leaky_relu_273)
        self.module_274 = py_nndct.nn.Cat() #Darknet::Darknet/FeatureConcat[module_list]/ModuleList[162]/ret.775(Darknet::nndct_concat_274)
        self.module_275 = py_nndct.nn.Conv2d(in_channels=277, out_channels=129, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[163]/Conv2d[Conv2d]/ret.777(Darknet::nndct_conv2d_275)
        self.module_276 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[163]/LeakyReLU[activation]/ret.781(Darknet::nndct_leaky_relu_276)
        self.module_277 = py_nndct.nn.Conv2d(in_channels=33, out_channels=66, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[165]/Conv2d[Conv2d]/ret.783(Darknet::nndct_conv2d_277)
        self.module_278 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[165]/LeakyReLU[activation]/ret.787(Darknet::nndct_leaky_relu_278)
        self.module_279 = py_nndct.nn.Conv2d(in_channels=66, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[166]/Conv2d[Conv2d]/ret.789(Darknet::nndct_conv2d_279)
        self.module_280 = py_nndct.nn.Conv2d(in_channels=70, out_channels=134, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[169]/Conv2d[Conv2d]/ret.791(Darknet::nndct_conv2d_280)
        self.module_281 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[169]/LeakyReLU[activation]/ret.795(Darknet::nndct_leaky_relu_281)
        self.module_282 = py_nndct.nn.Conv2d(in_channels=134, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[170]/Conv2d[Conv2d]/ret.797(Darknet::nndct_conv2d_282)
        self.module_283 = py_nndct.nn.Conv2d(in_channels=129, out_channels=273, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[173]/Conv2d[Conv2d]/ret.799(Darknet::nndct_conv2d_283)
        self.module_284 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #Darknet::Darknet/Sequential[module_list]/ModuleList[173]/LeakyReLU[activation]/ret.803(Darknet::nndct_leaky_relu_284)
        self.module_285 = py_nndct.nn.Conv2d(in_channels=273, out_channels=33, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #Darknet::Darknet/Sequential[module_list]/ModuleList[174]/Conv2d[Conv2d]/ret.805(Darknet::nndct_conv2d_285)
        self.module_286 = py_nndct.nn.dequant_output() #Darknet::Darknet/DeQuantStub[dequant]/24593(Darknet::nndct_dequant_stub_286)
        self.module_287 = py_nndct.nn.dequant_output() #Darknet::Darknet/DeQuantStub[dequant]/24597(Darknet::nndct_dequant_stub_287)
        self.module_288 = py_nndct.nn.dequant_output() #Darknet::Darknet/DeQuantStub[dequant]/24601(Darknet::nndct_dequant_stub_288)
        self.module_289 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24610(Darknet::nndct_shape_289)
        self.module_290 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24616(Darknet::nndct_shape_290)
        self.module_291 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24619(Darknet::nndct_shape_291)
        self.module_292 = py_nndct.nn.Module('nndct_arange') #Darknet::Darknet/24645(Darknet::nndct_arange_292)
        self.module_293 = py_nndct.nn.Module('nndct_arange') #Darknet::Darknet/24650(Darknet::nndct_arange_293)
        self.module_294 = py_nndct.nn.Module('aten::meshgrid') #Darknet::Darknet/24653(Darknet::aten_meshgrid_294)
        self.module_295 = py_nndct.nn.Module('nndct_stack') #Darknet::Darknet/24657(Darknet::nndct_stack_295)
        self.module_296 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/24662(Darknet::nndct_reshape_296)
        self.module_297 = py_nndct.nn.Module('nndct_cast') #Darknet::Darknet/24667(Darknet::nndct_cast_297)
        self.module_298 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/ret.813(Darknet::nndct_reshape_298)
        self.module_299 = py_nndct.nn.Module('nndct_permute') #Darknet::Darknet/ret.815(Darknet::nndct_permute_299)
        self.module_300 = py_nndct.nn.Module('nndct_contiguous') #Darknet::Darknet/ret.817(Darknet::nndct_contiguous_300)
        self.module_301 = py_nndct.nn.Sigmoid() #Darknet::Darknet/ret.819(Darknet::nndct_sigmoid_301)
        self.module_302 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.821(Darknet::nndct_strided_slice_302)
        self.module_303 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.823(Darknet::nndct_elemwise_mul_303)
        self.module_304 = py_nndct.nn.Sub() #Darknet::Darknet/ret.825(Darknet::nndct_elementwise_sub_304)
        self.module_305 = py_nndct.nn.Add() #Darknet::Darknet/ret.827(Darknet::nndct_elemwise_add_305)
        self.module_306 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.829(Darknet::nndct_strided_slice_307)
        self.module_307 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.831(Darknet::nndct_elemwise_mul_308)
        self.module_308 = py_nndct.nn.Module('aten::pow') #Darknet::Darknet/ret.833(Darknet::aten_pow_309)
        self.module_309 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.835(Darknet::nndct_elemwise_mul_310)
        self.module_310 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.837(Darknet::nndct_strided_slice_312)
        self.module_311 = py_nndct.nn.Module('aten::mul_') #Darknet::Darknet/24738(Darknet::aten_mul__313)
        self.module_312 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/ret.839(Darknet::nndct_reshape_315)
        self.module_313 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24752(Darknet::nndct_shape_316)
        self.module_314 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24758(Darknet::nndct_shape_317)
        self.module_315 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24761(Darknet::nndct_shape_318)
        self.module_316 = py_nndct.nn.Module('nndct_arange') #Darknet::Darknet/24787(Darknet::nndct_arange_319)
        self.module_317 = py_nndct.nn.Module('nndct_arange') #Darknet::Darknet/24792(Darknet::nndct_arange_320)
        self.module_318 = py_nndct.nn.Module('aten::meshgrid') #Darknet::Darknet/24795(Darknet::aten_meshgrid_321)
        self.module_319 = py_nndct.nn.Module('nndct_stack') #Darknet::Darknet/24799(Darknet::nndct_stack_322)
        self.module_320 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/24804(Darknet::nndct_reshape_323)
        self.module_321 = py_nndct.nn.Module('nndct_cast') #Darknet::Darknet/24809(Darknet::nndct_cast_324)
        self.module_322 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/ret.841(Darknet::nndct_reshape_325)
        self.module_323 = py_nndct.nn.Module('nndct_permute') #Darknet::Darknet/ret.843(Darknet::nndct_permute_326)
        self.module_324 = py_nndct.nn.Module('nndct_contiguous') #Darknet::Darknet/ret.845(Darknet::nndct_contiguous_327)
        self.module_325 = py_nndct.nn.Sigmoid() #Darknet::Darknet/ret.847(Darknet::nndct_sigmoid_328)
        self.module_326 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.849(Darknet::nndct_strided_slice_329)
        self.module_327 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.851(Darknet::nndct_elemwise_mul_330)
        self.module_328 = py_nndct.nn.Sub() #Darknet::Darknet/ret.853(Darknet::nndct_elementwise_sub_331)
        self.module_329 = py_nndct.nn.Add() #Darknet::Darknet/ret.855(Darknet::nndct_elemwise_add_332)
        self.module_330 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.857(Darknet::nndct_strided_slice_334)
        self.module_331 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.859(Darknet::nndct_elemwise_mul_335)
        self.module_332 = py_nndct.nn.Module('aten::pow') #Darknet::Darknet/ret.861(Darknet::aten_pow_336)
        self.module_333 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.863(Darknet::nndct_elemwise_mul_337)
        self.module_334 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.865(Darknet::nndct_strided_slice_339)
        self.module_335 = py_nndct.nn.Module('aten::mul_') #Darknet::Darknet/24880(Darknet::aten_mul__340)
        self.module_336 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/ret.867(Darknet::nndct_reshape_342)
        self.module_337 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24894(Darknet::nndct_shape_343)
        self.module_338 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24900(Darknet::nndct_shape_344)
        self.module_339 = py_nndct.nn.Module('nndct_shape') #Darknet::Darknet/24903(Darknet::nndct_shape_345)
        self.module_340 = py_nndct.nn.Module('nndct_arange') #Darknet::Darknet/24929(Darknet::nndct_arange_346)
        self.module_341 = py_nndct.nn.Module('nndct_arange') #Darknet::Darknet/24934(Darknet::nndct_arange_347)
        self.module_342 = py_nndct.nn.Module('aten::meshgrid') #Darknet::Darknet/24937(Darknet::aten_meshgrid_348)
        self.module_343 = py_nndct.nn.Module('nndct_stack') #Darknet::Darknet/24941(Darknet::nndct_stack_349)
        self.module_344 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/24946(Darknet::nndct_reshape_350)
        self.module_345 = py_nndct.nn.Module('nndct_cast') #Darknet::Darknet/24951(Darknet::nndct_cast_351)
        self.module_346 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/ret.869(Darknet::nndct_reshape_352)
        self.module_347 = py_nndct.nn.Module('nndct_permute') #Darknet::Darknet/ret.871(Darknet::nndct_permute_353)
        self.module_348 = py_nndct.nn.Module('nndct_contiguous') #Darknet::Darknet/ret.873(Darknet::nndct_contiguous_354)
        self.module_349 = py_nndct.nn.Sigmoid() #Darknet::Darknet/ret.875(Darknet::nndct_sigmoid_355)
        self.module_350 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.877(Darknet::nndct_strided_slice_356)
        self.module_351 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.879(Darknet::nndct_elemwise_mul_357)
        self.module_352 = py_nndct.nn.Sub() #Darknet::Darknet/ret.881(Darknet::nndct_elementwise_sub_358)
        self.module_353 = py_nndct.nn.Add() #Darknet::Darknet/ret.883(Darknet::nndct_elemwise_add_359)
        self.module_354 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.885(Darknet::nndct_strided_slice_361)
        self.module_355 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.887(Darknet::nndct_elemwise_mul_362)
        self.module_356 = py_nndct.nn.Module('aten::pow') #Darknet::Darknet/ret.889(Darknet::aten_pow_363)
        self.module_357 = py_nndct.nn.Module('nndct_elemwise_mul') #Darknet::Darknet/ret.891(Darknet::nndct_elemwise_mul_364)
        self.module_358 = py_nndct.nn.strided_slice() #Darknet::Darknet/ret.893(Darknet::nndct_strided_slice_366)
        self.module_359 = py_nndct.nn.Module('aten::mul_') #Darknet::Darknet/25022(Darknet::aten_mul__367)
        self.module_360 = py_nndct.nn.Module('nndct_reshape') #Darknet::Darknet/ret.895(Darknet::nndct_reshape_369)
        self.module_361 = py_nndct.nn.Cat() #Darknet::Darknet/ret(Darknet::nndct_concat_370)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(data=2.0, dtype=torch.float, device='cpu')
        output_module_1 = self.module_1(data=2.0, dtype=torch.float, device='cpu')
        output_module_2 = self.module_2(data=2.0, dtype=torch.float, device='cpu')
        output_module_3 = self.module_3(data=2.0, dtype=torch.float, device='cpu')
        output_module_4 = self.module_4(data=2.0, dtype=torch.float, device='cpu')
        output_module_5 = self.module_5(data=2.0, dtype=torch.float, device='cpu')
        output_module_6 = self.module_6(data=0.5, dtype=torch.float, device='cpu')
        output_module_7 = self.module_7(data=0.5, dtype=torch.float, device='cpu')
        output_module_8 = self.module_8(data=0.5, dtype=torch.float, device='cpu')
        output_module_9 = self.module_9(data=[[[[[0.375,0.375]]],[[[0.625,0.75]]],[[[1.25,1.0]]]]], dtype=torch.float, device='cpu')
        output_module_10 = self.module_10(data=8, dtype=torch.int64, device='cpu')
        output_module_11 = self.module_11(data=[[[[[0.4375,0.9375]]],[[[1.125,0.875]]],[[[1.0,2.0]]]]], dtype=torch.float, device='cpu')
        output_module_12 = self.module_12(data=16, dtype=torch.int64, device='cpu')
        output_module_13 = self.module_13(data=[[[[[1.1875,0.90625]]],[[[1.3125,2.09375]]],[[[3.125,3.375]]]]], dtype=torch.float, device='cpu')
        output_module_14 = self.module_14(data=32, dtype=torch.int64, device='cpu')
        output_module_15 = self.module_15(input=args[0])
        output_module_15 = self.module_16(input=output_module_15)
        output_module_15 = self.module_17(output_module_15)
        output_module_15 = self.module_18(output_module_15)
        output_module_15 = self.module_19(output_module_15)
        output_module_15 = self.module_20(output_module_15)
        output_module_21 = self.module_21(output_module_15)
        output_module_21 = self.module_22(output_module_21)
        output_module_21 = self.module_23(output_module_21)
        output_module_21 = self.module_24(output_module_21)
        output_module_21 = self.module_25(input=output_module_21, other=output_module_15, alpha=1)
        output_module_21 = self.module_26(output_module_21)
        output_module_21 = self.module_27(output_module_21)
        output_module_28 = self.module_28(output_module_21)
        output_module_28 = self.module_29(output_module_28)
        output_module_30 = self.module_30(output_module_21)
        output_module_30 = self.module_31(output_module_30)
        output_module_32 = self.module_32(output_module_30)
        output_module_32 = self.module_33(output_module_32)
        output_module_32 = self.module_34(output_module_32)
        output_module_32 = self.module_35(output_module_32)
        output_module_32 = self.module_36(input=output_module_32, other=output_module_30, alpha=1)
        output_module_37 = self.module_37(output_module_32)
        output_module_37 = self.module_38(output_module_37)
        output_module_37 = self.module_39(output_module_37)
        output_module_37 = self.module_40(output_module_37)
        output_module_37 = self.module_41(input=output_module_37, other=output_module_32, alpha=1)
        output_module_37 = self.module_42(output_module_37)
        output_module_37 = self.module_43(output_module_37)
        output_module_37 = self.module_44(dim=1, tensors=[output_module_37,output_module_28])
        output_module_37 = self.module_45(output_module_37)
        output_module_37 = self.module_46(output_module_37)
        output_module_37 = self.module_47(output_module_37)
        output_module_37 = self.module_48(output_module_37)
        output_module_49 = self.module_49(output_module_37)
        output_module_49 = self.module_50(output_module_49)
        output_module_51 = self.module_51(output_module_37)
        output_module_51 = self.module_52(output_module_51)
        output_module_53 = self.module_53(output_module_51)
        output_module_53 = self.module_54(output_module_53)
        output_module_53 = self.module_55(output_module_53)
        output_module_53 = self.module_56(output_module_53)
        output_module_53 = self.module_57(input=output_module_53, other=output_module_51, alpha=1)
        output_module_58 = self.module_58(output_module_53)
        output_module_58 = self.module_59(output_module_58)
        output_module_58 = self.module_60(output_module_58)
        output_module_58 = self.module_61(output_module_58)
        output_module_58 = self.module_62(input=output_module_58, other=output_module_53, alpha=1)
        output_module_63 = self.module_63(output_module_58)
        output_module_63 = self.module_64(output_module_63)
        output_module_63 = self.module_65(output_module_63)
        output_module_63 = self.module_66(output_module_63)
        output_module_63 = self.module_67(input=output_module_63, other=output_module_58, alpha=1)
        output_module_68 = self.module_68(output_module_63)
        output_module_68 = self.module_69(output_module_68)
        output_module_68 = self.module_70(output_module_68)
        output_module_68 = self.module_71(output_module_68)
        output_module_68 = self.module_72(input=output_module_68, other=output_module_63, alpha=1)
        output_module_73 = self.module_73(output_module_68)
        output_module_73 = self.module_74(output_module_73)
        output_module_73 = self.module_75(output_module_73)
        output_module_73 = self.module_76(output_module_73)
        output_module_73 = self.module_77(input=output_module_73, other=output_module_68, alpha=1)
        output_module_78 = self.module_78(output_module_73)
        output_module_78 = self.module_79(output_module_78)
        output_module_78 = self.module_80(output_module_78)
        output_module_78 = self.module_81(output_module_78)
        output_module_78 = self.module_82(input=output_module_78, other=output_module_73, alpha=1)
        output_module_83 = self.module_83(output_module_78)
        output_module_83 = self.module_84(output_module_83)
        output_module_83 = self.module_85(output_module_83)
        output_module_83 = self.module_86(output_module_83)
        output_module_83 = self.module_87(input=output_module_83, other=output_module_78, alpha=1)
        output_module_88 = self.module_88(output_module_83)
        output_module_88 = self.module_89(output_module_88)
        output_module_88 = self.module_90(output_module_88)
        output_module_88 = self.module_91(output_module_88)
        output_module_88 = self.module_92(input=output_module_88, other=output_module_83, alpha=1)
        output_module_88 = self.module_93(output_module_88)
        output_module_88 = self.module_94(output_module_88)
        output_module_88 = self.module_95(dim=1, tensors=[output_module_88,output_module_49])
        output_module_88 = self.module_96(output_module_88)
        output_module_88 = self.module_97(output_module_88)
        output_module_98 = self.module_98(output_module_88)
        output_module_98 = self.module_99(output_module_98)
        output_module_100 = self.module_100(output_module_98)
        output_module_100 = self.module_101(output_module_100)
        output_module_102 = self.module_102(output_module_98)
        output_module_102 = self.module_103(output_module_102)
        output_module_104 = self.module_104(output_module_102)
        output_module_104 = self.module_105(output_module_104)
        output_module_104 = self.module_106(output_module_104)
        output_module_104 = self.module_107(output_module_104)
        output_module_104 = self.module_108(input=output_module_104, other=output_module_102, alpha=1)
        output_module_109 = self.module_109(output_module_104)
        output_module_109 = self.module_110(output_module_109)
        output_module_109 = self.module_111(output_module_109)
        output_module_109 = self.module_112(output_module_109)
        output_module_109 = self.module_113(input=output_module_109, other=output_module_104, alpha=1)
        output_module_114 = self.module_114(output_module_109)
        output_module_114 = self.module_115(output_module_114)
        output_module_114 = self.module_116(output_module_114)
        output_module_114 = self.module_117(output_module_114)
        output_module_114 = self.module_118(input=output_module_114, other=output_module_109, alpha=1)
        output_module_119 = self.module_119(output_module_114)
        output_module_119 = self.module_120(output_module_119)
        output_module_119 = self.module_121(output_module_119)
        output_module_119 = self.module_122(output_module_119)
        output_module_119 = self.module_123(input=output_module_119, other=output_module_114, alpha=1)
        output_module_124 = self.module_124(output_module_119)
        output_module_124 = self.module_125(output_module_124)
        output_module_124 = self.module_126(output_module_124)
        output_module_124 = self.module_127(output_module_124)
        output_module_124 = self.module_128(input=output_module_124, other=output_module_119, alpha=1)
        output_module_129 = self.module_129(output_module_124)
        output_module_129 = self.module_130(output_module_129)
        output_module_129 = self.module_131(output_module_129)
        output_module_129 = self.module_132(output_module_129)
        output_module_129 = self.module_133(input=output_module_129, other=output_module_124, alpha=1)
        output_module_134 = self.module_134(output_module_129)
        output_module_134 = self.module_135(output_module_134)
        output_module_134 = self.module_136(output_module_134)
        output_module_134 = self.module_137(output_module_134)
        output_module_134 = self.module_138(input=output_module_134, other=output_module_129, alpha=1)
        output_module_139 = self.module_139(output_module_134)
        output_module_139 = self.module_140(output_module_139)
        output_module_139 = self.module_141(output_module_139)
        output_module_139 = self.module_142(output_module_139)
        output_module_139 = self.module_143(input=output_module_139, other=output_module_134, alpha=1)
        output_module_139 = self.module_144(output_module_139)
        output_module_139 = self.module_145(output_module_139)
        output_module_139 = self.module_146(dim=1, tensors=[output_module_139,output_module_100])
        output_module_139 = self.module_147(output_module_139)
        output_module_139 = self.module_148(output_module_139)
        output_module_149 = self.module_149(output_module_139)
        output_module_149 = self.module_150(output_module_149)
        output_module_151 = self.module_151(output_module_149)
        output_module_151 = self.module_152(output_module_151)
        output_module_153 = self.module_153(output_module_149)
        output_module_153 = self.module_154(output_module_153)
        output_module_155 = self.module_155(output_module_153)
        output_module_155 = self.module_156(output_module_155)
        output_module_155 = self.module_157(output_module_155)
        output_module_155 = self.module_158(output_module_155)
        output_module_155 = self.module_159(input=output_module_155, other=output_module_153, alpha=1)
        output_module_160 = self.module_160(output_module_155)
        output_module_160 = self.module_161(output_module_160)
        output_module_160 = self.module_162(output_module_160)
        output_module_160 = self.module_163(output_module_160)
        output_module_160 = self.module_164(input=output_module_160, other=output_module_155, alpha=1)
        output_module_165 = self.module_165(output_module_160)
        output_module_165 = self.module_166(output_module_165)
        output_module_165 = self.module_167(output_module_165)
        output_module_165 = self.module_168(output_module_165)
        output_module_165 = self.module_169(input=output_module_165, other=output_module_160, alpha=1)
        output_module_170 = self.module_170(output_module_165)
        output_module_170 = self.module_171(output_module_170)
        output_module_170 = self.module_172(output_module_170)
        output_module_170 = self.module_173(output_module_170)
        output_module_170 = self.module_174(input=output_module_170, other=output_module_165, alpha=1)
        output_module_170 = self.module_175(output_module_170)
        output_module_170 = self.module_176(output_module_170)
        output_module_170 = self.module_177(dim=1, tensors=[output_module_170,output_module_151])
        output_module_170 = self.module_178(output_module_170)
        output_module_170 = self.module_179(output_module_170)
        output_module_180 = self.module_180(output_module_170)
        output_module_180 = self.module_181(output_module_180)
        output_module_182 = self.module_182(output_module_170)
        output_module_182 = self.module_183(output_module_182)
        output_module_182 = self.module_184(output_module_182)
        output_module_182 = self.module_185(output_module_182)
        output_module_182 = self.module_186(output_module_182)
        output_module_182 = self.module_187(output_module_182)
        output_module_188 = self.module_188(output_module_182)
        output_module_189 = self.module_189(output_module_182)
        output_module_190 = self.module_190(output_module_182)
        output_module_190 = self.module_191(dim=1, tensors=[output_module_190,output_module_189,output_module_188,output_module_182])
        output_module_190 = self.module_192(output_module_190)
        output_module_190 = self.module_193(output_module_190)
        output_module_190 = self.module_194(output_module_190)
        output_module_190 = self.module_195(output_module_190)
        output_module_190 = self.module_196(dim=1, tensors=[output_module_190,output_module_180])
        output_module_190 = self.module_197(output_module_190)
        output_module_190 = self.module_198(output_module_190)
        output_module_199 = self.module_199(output_module_190)
        output_module_199 = self.module_200(output_module_199)
        output_module_199 = self.module_201(input=output_module_199, size=None, scale_factor=[2.0,2.0], mode='nearest')
        output_module_202 = self.module_202(output_module_139)
        output_module_202 = self.module_203(output_module_202)
        output_module_202 = self.module_204(dim=1, tensors=[output_module_202,output_module_199])
        output_module_202 = self.module_205(output_module_202)
        output_module_202 = self.module_206(output_module_202)
        output_module_207 = self.module_207(output_module_202)
        output_module_207 = self.module_208(output_module_207)
        output_module_209 = self.module_209(output_module_202)
        output_module_209 = self.module_210(output_module_209)
        output_module_209 = self.module_211(output_module_209)
        output_module_209 = self.module_212(output_module_209)
        output_module_209 = self.module_213(output_module_209)
        output_module_209 = self.module_214(output_module_209)
        output_module_209 = self.module_215(output_module_209)
        output_module_209 = self.module_216(output_module_209)
        output_module_209 = self.module_217(dim=1, tensors=[output_module_209,output_module_207])
        output_module_209 = self.module_218(output_module_209)
        output_module_209 = self.module_219(output_module_209)
        output_module_220 = self.module_220(output_module_209)
        output_module_220 = self.module_221(output_module_220)
        output_module_220 = self.module_222(input=output_module_220, size=None, scale_factor=[2.0,2.0], mode='nearest')
        output_module_223 = self.module_223(output_module_88)
        output_module_223 = self.module_224(output_module_223)
        output_module_223 = self.module_225(dim=1, tensors=[output_module_223,output_module_220])
        output_module_223 = self.module_226(output_module_223)
        output_module_223 = self.module_227(output_module_223)
        output_module_228 = self.module_228(output_module_223)
        output_module_228 = self.module_229(output_module_228)
        output_module_230 = self.module_230(output_module_223)
        output_module_230 = self.module_231(output_module_230)
        output_module_230 = self.module_232(output_module_230)
        output_module_230 = self.module_233(output_module_230)
        output_module_230 = self.module_234(output_module_230)
        output_module_230 = self.module_235(output_module_230)
        output_module_230 = self.module_236(output_module_230)
        output_module_230 = self.module_237(output_module_230)
        output_module_230 = self.module_238(dim=1, tensors=[output_module_230,output_module_228])
        output_module_230 = self.module_239(output_module_230)
        output_module_230 = self.module_240(output_module_230)
        output_module_241 = self.module_241(output_module_230)
        output_module_241 = self.module_242(output_module_241)
        output_module_241 = self.module_243(dim=1, tensors=[output_module_241,output_module_209])
        output_module_241 = self.module_244(output_module_241)
        output_module_241 = self.module_245(output_module_241)
        output_module_246 = self.module_246(output_module_241)
        output_module_246 = self.module_247(output_module_246)
        output_module_248 = self.module_248(output_module_241)
        output_module_248 = self.module_249(output_module_248)
        output_module_248 = self.module_250(output_module_248)
        output_module_248 = self.module_251(output_module_248)
        output_module_248 = self.module_252(output_module_248)
        output_module_248 = self.module_253(output_module_248)
        output_module_248 = self.module_254(output_module_248)
        output_module_248 = self.module_255(output_module_248)
        output_module_248 = self.module_256(dim=1, tensors=[output_module_248,output_module_246])
        output_module_248 = self.module_257(output_module_248)
        output_module_248 = self.module_258(output_module_248)
        output_module_259 = self.module_259(output_module_248)
        output_module_259 = self.module_260(output_module_259)
        output_module_259 = self.module_261(dim=1, tensors=[output_module_259,output_module_190])
        output_module_259 = self.module_262(output_module_259)
        output_module_259 = self.module_263(output_module_259)
        output_module_264 = self.module_264(output_module_259)
        output_module_264 = self.module_265(output_module_264)
        output_module_266 = self.module_266(output_module_259)
        output_module_266 = self.module_267(output_module_266)
        output_module_266 = self.module_268(output_module_266)
        output_module_266 = self.module_269(output_module_266)
        output_module_266 = self.module_270(output_module_266)
        output_module_266 = self.module_271(output_module_266)
        output_module_266 = self.module_272(output_module_266)
        output_module_266 = self.module_273(output_module_266)
        output_module_266 = self.module_274(dim=1, tensors=[output_module_266,output_module_264])
        output_module_266 = self.module_275(output_module_266)
        output_module_266 = self.module_276(output_module_266)
        output_module_277 = self.module_277(output_module_230)
        output_module_277 = self.module_278(output_module_277)
        output_module_277 = self.module_279(output_module_277)
        output_module_280 = self.module_280(output_module_248)
        output_module_280 = self.module_281(output_module_280)
        output_module_280 = self.module_282(output_module_280)
        output_module_266 = self.module_283(output_module_266)
        output_module_266 = self.module_284(output_module_266)
        output_module_266 = self.module_285(output_module_266)
        output_module_277 = self.module_286(input=output_module_277)
        output_module_280 = self.module_287(input=output_module_280)
        output_module_266 = self.module_288(input=output_module_266)
        output_module_289 = self.module_289(input=output_module_277, dim=0)
        output_module_290 = self.module_290(input=output_module_277, dim=2)
        output_module_291 = self.module_291(input=output_module_277, dim=3)
        output_module_292 = self.module_292(end=output_module_290, device='cpu')
        output_module_293 = self.module_293(end=output_module_291, device='cpu')
        output_module_294_0,output_module_294_1 = self.module_294({'tensors': [output_module_292,output_module_293]})
        output_module_295 = self.module_295(tensors=[output_module_294_1,output_module_294_0], dim=2)
        output_module_295 = self.module_296(input=output_module_295, shape=[1,1,output_module_290,output_module_291,2])
        output_module_295 = self.module_297(input=output_module_295, dtype=torch.float, non_blocking=False, copy=False)
        output_module_298 = self.module_298(input=output_module_277, shape=[output_module_289,3,11,output_module_290,output_module_291])
        output_module_298 = self.module_299(dims=[0,1,3,4,2], input=output_module_298)
        output_module_298 = self.module_300(output_module_298)
        output_module_301 = self.module_301(output_module_298)
        output_module_302 = self.module_302(input=output_module_301, dim=[4], start=[0], end=[2], step=[1])
        output_module_302 = self.module_303(input=output_module_302, other=output_module_4)
        output_module_302 = self.module_304(input=output_module_302, other=output_module_8, alpha=1)
        output_module_302 = self.module_305(input=output_module_302, other=output_module_295, alpha=1)
        output_module_301[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2:1] = output_module_302
        output_module_306 = self.module_306(input=output_module_301, dim=[4], start=[2], end=[4], step=[1])
        output_module_306 = self.module_307(input=output_module_306, other=output_module_5)
        output_module_306 = self.module_308({'self': output_module_306,'exponent': 2})
        output_module_306 = self.module_309(input=output_module_306, other=output_module_9)
        output_module_301[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,2:4:1] = output_module_306
        output_module_310 = self.module_310(input=output_module_301, dim=[4], start=[0], end=[4], step=[1])
        output_module_310 = self.module_311({'self': output_module_310,'other': output_module_10})
        output_module_301[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,0:4:1] = output_module_310
        output_module_312 = self.module_312(input=output_module_301, shape=[output_module_289,-1,11])
        output_module_313 = self.module_313(input=output_module_280, dim=0)
        output_module_314 = self.module_314(input=output_module_280, dim=2)
        output_module_315 = self.module_315(input=output_module_280, dim=3)
        output_module_316 = self.module_316(end=output_module_314, device='cpu')
        output_module_317 = self.module_317(end=output_module_315, device='cpu')
        output_module_318_0,output_module_318_1 = self.module_318({'tensors': [output_module_316,output_module_317]})
        output_module_319 = self.module_319(tensors=[output_module_318_1,output_module_318_0], dim=2)
        output_module_319 = self.module_320(input=output_module_319, shape=[1,1,output_module_314,output_module_315,2])
        output_module_319 = self.module_321(input=output_module_319, dtype=torch.float, non_blocking=False, copy=False)
        output_module_322 = self.module_322(input=output_module_280, shape=[output_module_313,3,11,output_module_314,output_module_315])
        output_module_322 = self.module_323(dims=[0,1,3,4,2], input=output_module_322)
        output_module_322 = self.module_324(output_module_322)
        output_module_325 = self.module_325(output_module_322)
        output_module_326 = self.module_326(input=output_module_325, dim=[4], start=[0], end=[2], step=[1])
        output_module_326 = self.module_327(input=output_module_326, other=output_module_2)
        output_module_326 = self.module_328(input=output_module_326, other=output_module_7, alpha=1)
        output_module_326 = self.module_329(input=output_module_326, other=output_module_319, alpha=1)
        output_module_325[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2:1] = output_module_326
        output_module_330 = self.module_330(input=output_module_325, dim=[4], start=[2], end=[4], step=[1])
        output_module_330 = self.module_331(input=output_module_330, other=output_module_3)
        output_module_330 = self.module_332({'self': output_module_330,'exponent': 2})
        output_module_330 = self.module_333(input=output_module_330, other=output_module_11)
        output_module_325[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,2:4:1] = output_module_330
        output_module_334 = self.module_334(input=output_module_325, dim=[4], start=[0], end=[4], step=[1])
        output_module_334 = self.module_335({'self': output_module_334,'other': output_module_12})
        output_module_325[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,0:4:1] = output_module_334
        output_module_336 = self.module_336(input=output_module_325, shape=[output_module_313,-1,11])
        output_module_337 = self.module_337(input=output_module_266, dim=0)
        output_module_338 = self.module_338(input=output_module_266, dim=2)
        output_module_339 = self.module_339(input=output_module_266, dim=3)
        output_module_340 = self.module_340(end=output_module_338, device='cpu')
        output_module_341 = self.module_341(end=output_module_339, device='cpu')
        output_module_342_0,output_module_342_1 = self.module_342({'tensors': [output_module_340,output_module_341]})
        output_module_343 = self.module_343(tensors=[output_module_342_1,output_module_342_0], dim=2)
        output_module_343 = self.module_344(input=output_module_343, shape=[1,1,output_module_338,output_module_339,2])
        output_module_343 = self.module_345(input=output_module_343, dtype=torch.float, non_blocking=False, copy=False)
        output_module_346 = self.module_346(input=output_module_266, shape=[output_module_337,3,11,output_module_338,output_module_339])
        output_module_346 = self.module_347(dims=[0,1,3,4,2], input=output_module_346)
        output_module_346 = self.module_348(output_module_346)
        output_module_349 = self.module_349(output_module_346)
        output_module_350 = self.module_350(input=output_module_349, dim=[4], start=[0], end=[2], step=[1])
        output_module_350 = self.module_351(input=output_module_350, other=output_module_0)
        output_module_350 = self.module_352(input=output_module_350, other=output_module_6, alpha=1)
        output_module_350 = self.module_353(input=output_module_350, other=output_module_343, alpha=1)
        output_module_349[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2:1] = output_module_350
        output_module_354 = self.module_354(input=output_module_349, dim=[4], start=[2], end=[4], step=[1])
        output_module_354 = self.module_355(input=output_module_354, other=output_module_1)
        output_module_354 = self.module_356({'self': output_module_354,'exponent': 2})
        output_module_354 = self.module_357(input=output_module_354, other=output_module_13)
        output_module_349[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,2:4:1] = output_module_354
        output_module_358 = self.module_358(input=output_module_349, dim=[4], start=[0], end=[4], step=[1])
        output_module_358 = self.module_359({'self': output_module_358,'other': output_module_14})
        output_module_349[0:2147483647:1,0:2147483647:1,0:2147483647:1,0:2147483647:1,0:4:1] = output_module_358
        output_module_360 = self.module_360(input=output_module_349, shape=[output_module_337,-1,11])
        output_module_312 = self.module_361(dim=1, tensors=[output_module_312,output_module_336,output_module_360])
        return (output_module_312,output_module_298,output_module_322,output_module_346)
